use bson::{oid::ObjectId, DateTime};
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug, PartialEq)]
pub struct ClassModel {
    #[serde(rename = "_id")]
    pub id: ObjectId,
    pub path: Option<String>,
    pub ext: Option<String>,
    #[serde(rename = "SIMPLE")]
    pub simple: Option<bool>,
    #[serde(rename = "BITPIX")]
    pub bitpix: Option<i64>,
    #[serde(rename = "NAXIS")]
    pub naxis: Option<i64>,
    #[serde(rename = "EXTEND")]
    pub extend: Option<bool>,
    #[serde(rename = "DATE")]
    pub date: Option<String>,
    #[serde(rename = "END")]
    pub end: Option<String>,
    #[serde(rename = "XTENSION")]
    pub xtension: Option<String>,
    #[serde(rename = "NAXIS1")]
    pub naxis1: Option<i64>,
    #[serde(rename = "NAXIS2")]
    pub naxis2: Option<i64>,
    #[serde(rename = "PCOUNT")]
    pub pcount: Option<i64>,
    #[serde(rename = "GCOUNT")]
    pub gcount: Option<i64>,
    #[serde(rename = "TFIELDS")]
    pub tfields: Option<i64>,
    #[serde(rename = "TFORM1")]
    pub tform1: Option<String>,
    #[serde(rename = "TFORM2")]
    pub tform2: Option<String>,
    #[serde(rename = "TTYPE1")]
    pub ttype1: Option<String>,
    #[serde(rename = "TTYPE2")]
    pub ttype2: Option<String>,
    #[serde(rename = "TUNIT2")]
    pub tunit2: Option<String>,
    #[serde(rename = "EXTNAME")]
    pub extname: Option<String>,
    #[serde(rename = "HDUCLASS")]
    pub hduclass: Option<String>,
    #[serde(rename = "HDUCLAS1")]
    pub hduclas1: Option<String>,
    #[serde(rename = "HDUVERS1")]
    pub hduvers1: Option<String>,
    #[serde(rename = "HDUVERS")]
    pub hduvers: Option<String>,
    #[serde(rename = "HDUCLAS2")]
    pub hduclas2: Option<String>,
    #[serde(rename = "HDUCLAS3")]
    pub hduclas3: Option<String>,
    #[serde(rename = "TLMIN1")]
    pub tlmin1: Option<i64>,
    #[serde(rename = "TLMAX1")]
    pub tlmax1: Option<i64>,
    #[serde(rename = "TELESCOP")]
    pub telescop: Option<String>,
    #[serde(rename = "INSTRUME")]
    pub instrume: Option<String>,
    #[serde(rename = "FILTER")]
    pub filter: Option<String>,
    #[serde(rename = "EXPOSURE")]
    pub exposure: Option<f64>,
    #[serde(rename = "AREASCAL")]
    pub areascal: Option<i64>,
    #[serde(rename = "BACKFILE")]
    pub backfile: Option<String>,
    #[serde(rename = "BACKSCAL")]
    pub backscal: Option<i64>,
    #[serde(rename = "CORRFILE")]
    pub corrfile: Option<String>,
    #[serde(rename = "CORRSCAL")]
    pub corrscal: Option<i64>,
    #[serde(rename = "RESPFILE")]
    pub respfile: Option<String>,
    #[serde(rename = "ANCRFILE")]
    pub ancrfile: Option<String>,
    #[serde(rename = "PHAVERSN")]
    pub phaversn: Option<String>,
    #[serde(rename = "DETCHANS")]
    pub detchans: Option<i64>,
    #[serde(rename = "CHANTYPE")]
    pub chantype: Option<String>,
    #[serde(rename = "POISSERR")]
    pub poisserr: Option<bool>,
    #[serde(rename = "STAT_ERR")]
    pub stat_err: Option<i64>,
    #[serde(rename = "SYS_ERR")]
    pub sys_err: Option<i64>,
    #[serde(rename = "GROUPING")]
    pub grouping: Option<i64>,
    #[serde(rename = "QUALITY")]
    pub quality: Option<i64>,
    #[serde(rename = "EQUINOX")]
    pub equinox: Option<f64>,
    #[serde(rename = "PROGRAM")]
    pub program: Option<String>,
    #[serde(rename = "IPFILE")]
    pub ipfile: Option<String>,
    #[serde(rename = "DATASET")]
    pub dataset: Option<i64>,
    #[serde(rename = "STARTIME")]
    pub startime: Option<String>,
    #[serde(rename = "ENDTIME")]
    pub endtime: Option<String>,
    #[serde(rename = "TEMP")]
    pub temp: Option<f64>,
    #[serde(rename = "GAIN")]
    pub gain: Option<f64>,
    #[serde(rename = "SCD_USED")]
    pub scd_used: Option<String>,
    #[serde(rename = "MID_UTC")]
    pub mid_utc: Option<String>,
    #[serde(rename = "SAT_ALT")]
    pub sat_alt: Option<f64>,
    #[serde(rename = "SAT_LAT")]
    pub sat_lat: Option<f64>,
    #[serde(rename = "SAT_LON")]
    pub sat_lon: Option<f64>,
    #[serde(rename = "LST_HR")]
    pub lst_hr: Option<i64>,
    #[serde(rename = "LST_MIN")]
    pub lst_min: Option<i64>,
    #[serde(rename = "LST_SEC")]
    pub lst_sec: Option<i64>,
    #[serde(rename = "BORE_LAT")]
    pub bore_lat: Option<f64>,
    #[serde(rename = "BORE_LON")]
    pub bore_lon: Option<f64>,
    #[serde(rename = "V0_LAT")]
    pub v0_lat: Option<f64>,
    #[serde(rename = "V1_LAT")]
    pub v1_lat: Option<f64>,
    #[serde(rename = "V2_LAT")]
    pub v2_lat: Option<f64>,
    #[serde(rename = "V3_LAT")]
    pub v3_lat: Option<f64>,
    #[serde(rename = "V0_LON")]
    pub v0_lon: Option<f64>,
    #[serde(rename = "V1_LON")]
    pub v1_lon: Option<f64>,
    #[serde(rename = "V2_LON")]
    pub v2_lon: Option<f64>,
    #[serde(rename = "V3_LON")]
    pub v3_lon: Option<f64>,
    #[serde(rename = "SOLARANG")]
    pub solarang: Option<f64>,
    #[serde(rename = "PHASEANG")]
    pub phaseang: Option<f64>,
    #[serde(rename = "EMISNANG")]
    pub emisnang: Option<f64>,
    #[serde(rename = "LIVETIME")]
    pub live_time: Option<f64>,
    #[serde(rename = "parsedStartTime")]
    pub parsed_start_time: Option<DateTime>,
    #[serde(rename = "parsedEndTime")]
    pub parsed_end_time: Option<DateTime>,
}
